.TH HSH 1 "26 November 2019" "Version 1.0" "General Commands Manual"

.SH NAME

.B hsh - simple command interpreter (simple shell)

.SH SYNOPSIS

.B hsh [options] [file]

.SH DESCRIPTION

The simple shell is a simple command interpreter for the system.  This version is a simple shell that has features similar to sh.

.PP

The simple shell is a command that reads a line from the command line.  It displays a prompt and receives a command.  It reads a one word command.  After a command has been executed, it displays the prompt again followed by a new line.  If an executable is not present, an error message will be printed and it displays the prompt again.

.SH OPTIONS

The following are options that changes the normal simple shell environment at booting.

.PP

.B -i

.RS

interactive shell

.RE

.PP

.B -l

.RS

non-interactive shell

.RE

.PP

.B -r

.RS

restricted shell

.RE

.PP

.SH INVOCATION

In its interactive mode, the simple shell will display a prompt, handle execution and errors.  In its non-interactive mode, the simple shell will display prompt, execute a shell script and exits once executed.  In its restricted mode, the simple shell will display a prompt but handle limited commands.

.PP

.SH ARGUMENTS

.PP

The argument(s) follows the single word command.  They are first searched in the PATH.  If found, it will read and execute the command, then exit and display the prompt again.  If not found in the PATH, the argument will be searched in the built-in.  When found, it will read and execute the command, then exit and display the prompt again.

.PP

SYNTAX: jj$command -arguments

.PP

EXAMPLE: jj$ls -l

.PP

.SH DEFINITIONS

.B end-of-file (EOF)

- indicates no more data is available for reading; its keyboard translation is Ctrl+D

.PP

.B exit status

- return status of a command after it terminates

.PP

.B file command

- takes a file as a command line argument; the simple shell will not print a prompt again and will not read from standard input

.PP

.B process identification (pid)

- a unique identification number assigned by the kernel to every process

.PP

.B prompt

- displayed when the simple shell is booted

.PP

.B signals

- a handler condition for processes;

.PP

.B static variable

- a variable that's declared and initialized only once and stays the same through the end of the program

.PP

.SH BUILT-INS

.B setenv

- a built-in function that defines the value of an environmental variable

.PP

.B unsetenv

- a built-in function that removes an environmental variable

.PP

.SH ENVIRONMENTAL VARIABLES

.B HOME

- an environmental variable that contains the path of the home directory

.PP

.B PATH

- an environmental variable that contains directories where executable files are stored

.PP

.B Print Working Directory (PWD)

- an environmental variable that contains the path of the current directory

.PP

.SH FUNCTIONS

.B chdir

- a function that changes the current working directory

.PP

.B exit

- a function that terminates the simple shell; its keyboard translation is Ctrl+C

.PP

.B getcwd

- a function that copies the pathname of the current working directory

.PP

.B getline

- a function that reads line from the simple shell

.PP

.B strtok

- a function that splits a string by a delimiter into substrings called tokens

.PP

.SH GLOBAL VARIABLES

.B environ

- a global variable that's an array of strings containing environment variables

.PP

.SH LISTS

.PP

.B ;

- a commands separator that allows more than one command to be executed; the commands are processed in order

.PP

.B &&

- a shell logical operator that executes if both commands are true

.PP

.B ||

- a shell logical operator that executes both or whichever command is true

.PP

.SH SIMPLE COMMANDS

.B alias

- a command line argument that prints a list of aliases; an alias is a shortcut to a command

.PP

.B cd

- a command line argument that changes the current directory

.PP

.B env

- a command line argument that prints a list of environment variables

.PP

.B help

- a command line argument that prints a list of built-in commands

.PP

.B history

- a command line argument that prints a list of previously used commands and their corresponding pids

.PP

.B printenv

- a command line argument that prints the list of environment variables contained in environ

.SH SPECIAL VARIABLES

.B $?

- a special variable that prints the return value of the previously executed process

.PP

.B $$

- a special variable that prints the pid of the current process

.PP

.B $#

- a special variable that prints the number of command line arguments

.PP

.B $*

- a special variable that prints the list of arguments in the current process

.PP

.SH SYSTEM CALLS

.B execve

- a system call that replaces the current process with a new process

.PP

.B fork

- a system call that creates a new process called a child process

.PP

.B getpid

- a system call that returns the pid of the current process

.PP

.B getppid

- a system call that returns the parent pid of the current process

.PP

.B read

- a system call that reads from a file descriptor in the kernel

.PP

.B signal

- a system call that interrupts current executing process

.PP

.B stat

- a system call that returns current information about a file

.PP

.B wait

- a system call that waits for a child process to terminate

.PP

.SH SEE ALSO

.I sh(1), csh(1), ksh(1), tcsh(1), zsh(1), bash(1), dash(1)

.SH BUGS

No known bugs.

.SH AUTHORS

Jeremy Bedolla, Jennifer Tang
